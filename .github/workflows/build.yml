name: Build and Notify

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Build APK
      id: build_step
      continue-on-error: true
      run: ./gradlew clean assembleDebug 2> build_error.log
      
    - name: Verify APK path
      if: success()
      run: |
        echo "Verifying APK location..."
        ls -l app/build/outputs/apk/debug/
        
    - name: Upload Successful Build to Telegram
      if: steps.build_step.outcome == 'success'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          ✅ *Build Successful!*
          *Repository:* `${{ github.repository }}`
          *Version:* `1.0.${{ github.run_number }}`
          *Commit:* `${{ github.sha }}`
          *Branch:* `${{ github.ref_name }}`
          
          New APK is ready for download.
        document: app/build/outputs/apk/debug/app-debug.apk
        format: markdown

    - name: Notify Build Failure on Telegram
      if: steps.build_step.outcome == 'failure'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          ❌ *Build Failed!*
          *Repository:* `${{ github.repository }}`
          *Commit:* `${{ github.sha }}`
          
          *Error Log:*
          ```
          $(cat build_error.log)
          ```
          
          Full logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        format: markdown
