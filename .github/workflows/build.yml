name: Android CI Build with Telegram Notifications

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build project and capture logs
        run: |
          set -o pipefail
          ./gradlew assembleDebug 2>&1 | tee build_full.log | tail -n 50 > build_short.log || true

      - name: Upload full build log as artifact
        uses: actions/upload-artifact@v4
        with:
          name: full-build-log
          path: build_full.log

      - name: Commit short build log
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          mv build_short.log build.log
          git add build.log || true
          git commit -m "ci: update short build log [skip ci]" || true
          git push origin main || true

      - name: Notify Telegram on Failure
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ *Build Failed!*
            *Repository:* `${{ github.repository }}`
            *Commit:* `${{ github.sha }}`
            *Branch:* `${{ github.ref_name }}`
            
            *Last 50 lines of build log:*
            ```
            $(cat build_short.log)
            ```
            
            Full log available as artifact in GitHub Actions.

      - name: Notify Telegram on Success
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ *Build Successful!*
            *Repository:* `${{ github.repository }}`
            *Commit:* `${{ github.sha }}`
            *Branch:* `${{ github.ref_name }}`
            
            APK ready for download.
          document: app/build/outputs/apk/debug/app-debug.apk
          format: markdown
